import pandas as pd
import numpy as np
distress = pd.read_csv(r"C:\Users\User\Desktop\Distress.csv")
distress["Financial Distress"] = np.where(distress["Financial Distress"] >-0.5, 0, 1)
distress.drop(["Company", "Time"], axis=1, inplace=True)
print(distress.head().to_string())

y = distress['Financial Distress'].values
X = distress.drop('Financial Distress', axis=1).values

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)

# BaggingClassifier
from sklearn.ensemble import BaggingClassifier
from sklearn.linear_model import LogisticRegression
model = LogisticRegression(max_iter=30000)

hybrid = BaggingClassifier(estimator=model, n_estimators=30)
hybrid.fit(X_train, y_train)
print(hybrid.score(X_test, y_test))

# VotingRegressor
from sklearn.ensemble import VotingClassifier
from sklearn.svm import SVC
from sklearn.naive_bayes import GaussianNB
from sklearn.tree import DecisionTreeClassifier

vote = VotingClassifier(estimators=[
    ('svc', SVC()), ('bayes', GaussianNB()), ('tree', DecisionTreeClassifier())],
    voting='hard' #soft
)
vote.fit(X_train, y_train)
print(vote.score(X_test, y_test))
